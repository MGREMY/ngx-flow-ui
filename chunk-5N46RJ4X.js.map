{
  "version": 3,
  "sources": ["projects/ngx-flow-ui-demo/src/app/components/home.component.ts", "projects/ngx-flow-ui-demo/src/app/components/home.component.html", "projects/ngx-flow-ui/src/lib/components/ngx-flow-ui-badge/ngx-flow-ui-badge.properties.ts", "projects/ngx-flow-ui/src/lib/components/ngx-flow-ui-badge/ngx-flow-ui-badge.component.ts", "projects/ngx-flow-ui-demo/src/app/components/ngx-flow-ui-badge/ngx-flow-ui-badge.component.ts", "projects/ngx-flow-ui-demo/src/app/components/ngx-flow-ui-badge/ngx-flow-ui-badge.component.html", "projects/ngx-flow-ui/src/lib/components/ngx-flow-ui-button/ngx-flow-ui-button.properties.ts", "projects/ngx-flow-ui/src/lib/components/ngx-flow-ui-button/ngx-flow-ui-button.component.ts", "projects/ngx-flow-ui-demo/src/app/components/ngx-flow-ui-button/ngx-flow-ui-button.component.ts", "projects/ngx-flow-ui-demo/src/app/components/ngx-flow-ui-button/ngx-flow-ui-button.component.html", "projects/ngx-flow-ui-demo/src/app/components/home.routing.ts"],
  "sourcesContent": ["/** @format */\n\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-home-component',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent {}\n", "<!-- @format -->\n\n<h1>Home component</h1>\n", "/** @format */\n\nimport { IComponentProperties } from '@ngx-flow-ui/lib/components/icomponent.properties';\nimport * as properties from '@ngx-flow-ui/lib/components/ngx-flow-ui.properties';\n\nexport type badgePill = 'disable' | 'enable';\nexport type badgeMode = 'label' | 'svg' | 'label+svg';\n\nexport class NgxFlowUiBadgeProperties implements IComponentProperties {\n  private static instance: NgxFlowUiBadgeProperties;\n\n  private constructor() {}\n\n  public static getInstance(): NgxFlowUiBadgeProperties {\n    if (!NgxFlowUiBadgeProperties.instance) {\n      NgxFlowUiBadgeProperties.instance = new NgxFlowUiBadgeProperties();\n    }\n\n    return NgxFlowUiBadgeProperties.instance;\n  }\n\n  BaseClass = '';\n\n  FillColorClass: Record<properties.FillClass, Record<properties.Color, string>> = {\n    solid: {\n      blue: ' bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-800',\n      red: ' bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-800',\n      green: ' bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-800',\n      yellow: ' bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-800',\n    },\n    outline: {\n      blue: ' text-blue-800 dark:text-blue-800',\n      red: ' text-red-800 dark:text-red-800',\n      green: ' text-green-800 dark:text-green-800',\n      yellow: ' text-yellow-800 dark:text-yellow-800',\n    },\n  };\n\n  SizeClass: Record<properties.Size, string> = {\n    xs: ' text-xs',\n    sm: ' text-sm',\n    md: ' text-base',\n    lg: ' text-lg',\n    xl: ' text-xl',\n  };\n\n  BorderFillColorClass: Record<properties.FillClass, Record<properties.Color, string>> = {\n    solid: {\n      blue: '',\n      red: '',\n      green: '',\n      yellow: '',\n    },\n    outline: {\n      blue: ' border border-blue-400',\n      red: ' border border-red-400',\n      green: ' border border-green-400',\n      yellow: ' border border-yellow-400',\n    },\n  };\n\n  PillClass: Record<badgePill, string> = {\n    enable: ' rounded-full',\n    disable: ' rounded',\n  };\n\n  ModeClass: Record<badgeMode, string> = {\n    label: ' px-2.5 py-0.5 font-medium',\n    svg: ' inline-flex items-center justify-center w-6 h-6 font-semibold',\n    'label+svg': ' px-2.5 py-0.5 inline-flex items-center font-medium',\n  };\n}\n", "/** @format */\n\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport * as properties from '@ngx-flow-ui/lib/components/ngx-flow-ui.properties';\nimport * as badgeProperties from './ngx-flow-ui-badge.properties';\n\n@Component({\n  selector: 'ngx-flow-ui-badge',\n  standalone: true,\n  imports: [],\n  template: `<span [className]=\"badgeClass\">\n    <ng-content></ng-content>\n  </span>`,\n})\nexport class NgxFlowUiBadgeComponent implements OnInit {\n  @Input() color: properties.Color = 'blue';\n  @Input() fill: properties.FillClass = 'solid';\n  @Input() size: properties.Size = 'sm';\n\n  @Input() pill: badgeProperties.badgePill = 'disable';\n  @Input() mode: badgeProperties.badgeMode = 'label';\n\n  @Input() buttonBadge: boolean = false;\n\n  badgeClass: string = '';\n\n  ngOnInit(): void {\n    this.badgeClass += badgeProperties.NgxFlowUiBadgeProperties.getInstance().BaseClass;\n    if (!this.buttonBadge) {\n      this.badgeClass += badgeProperties.NgxFlowUiBadgeProperties.getInstance().SizeClass[this.size];\n      this.badgeClass += badgeProperties.NgxFlowUiBadgeProperties.getInstance().FillColorClass[this.fill][this.color];\n      this.badgeClass += badgeProperties.NgxFlowUiBadgeProperties.getInstance().ModeClass[this.mode];\n      this.badgeClass +=\n        badgeProperties.NgxFlowUiBadgeProperties.getInstance().BorderFillColorClass[\n          this.mode == 'label+svg' || this.fill == 'outline' ? 'outline' : this.fill\n        ][this.color];\n      this.badgeClass +=\n        badgeProperties.NgxFlowUiBadgeProperties.getInstance().PillClass[\n          this.pill == 'enable' || this.mode == 'svg' ? 'enable' : this.pill\n        ];\n    }\n  }\n}\n", "/** @format */\n\nimport { Component } from '@angular/core';\nimport { NgxFlowUiBadgeComponent as FlowUiBadge } from '@ngx-flow-ui/lib/components/ngx-flow-ui-badge/ngx-flow-ui-badge.component';\n\n@Component({\n  selector: 'app-ngx-flow-ui-badge',\n  standalone: true,\n  imports: [FlowUiBadge],\n  templateUrl: './ngx-flow-ui-badge.component.html',\n  styleUrl: './ngx-flow-ui-badge.component.scss',\n})\nexport class NgxFlowUiBadgeComponent {}\n", "<!-- @format -->\n\n<ngx-flow-ui-badge color=\"blue\" fill=\"solid\" size=\"xs\">Blue</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"red\" fill=\"solid\" size=\"xs\">Red</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"green\" fill=\"solid\" size=\"xs\">Green</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"yellow\" fill=\"solid\" size=\"xs\">Yellow</ngx-flow-ui-badge>\n<br />\n<ngx-flow-ui-badge color=\"blue\" fill=\"solid\" size=\"lg\">Blue</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"red\" fill=\"solid\" size=\"lg\">Red</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"green\" fill=\"solid\" size=\"lg\">Green</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"yellow\" fill=\"solid\" size=\"lg\">Yellow</ngx-flow-ui-badge>\n<br />\n<ngx-flow-ui-badge color=\"blue\" fill=\"outline\" size=\"xs\">Blue</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"red\" fill=\"outline\" size=\"xs\">Red</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"green\" fill=\"outline\" size=\"xs\">Green</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"yellow\" fill=\"outline\" size=\"xs\">Yellow</ngx-flow-ui-badge>\n<br />\n<ngx-flow-ui-badge color=\"blue\" fill=\"solid\" size=\"xs\" pill=\"enable\">Blue</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"red\" fill=\"solid\" size=\"xs\" pill=\"enable\">Red</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"green\" fill=\"solid\" size=\"xs\" pill=\"enable\">Green</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"yellow\" fill=\"solid\" size=\"xs\" pill=\"enable\">Yellow</ngx-flow-ui-badge>\n<br />\n<ngx-flow-ui-badge color=\"blue\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"red\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"green\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"yellow\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-badge>\n<br />\n<ngx-flow-ui-badge color=\"blue\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  <svg class=\"me-1.5 h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n  Blue\n</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"red\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  <svg class=\"me-1.5 h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n  Red\n</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"green\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  <svg class=\"me-1.5 h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n  Green\n</ngx-flow-ui-badge>\n<ngx-flow-ui-badge color=\"yellow\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  <svg class=\"me-1.5 h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n  Yellow\n</ngx-flow-ui-badge>\n", "/** @format */\n\nimport { IComponentProperties, IDisablableProperties } from '@ngx-flow-ui/lib/components/icomponent.properties';\nimport * as properties from '@ngx-flow-ui/lib/components/ngx-flow-ui.properties';\n\nexport type buttonMode = 'label' | 'svg' | 'label+svg';\n\nexport class NgxFlowUiButtonProperties implements IComponentProperties, IDisablableProperties {\n  private static instance: NgxFlowUiButtonProperties;\n\n  private constructor() {}\n\n  public static getInstance(): NgxFlowUiButtonProperties {\n    if (!NgxFlowUiButtonProperties.instance) {\n      NgxFlowUiButtonProperties.instance = new NgxFlowUiButtonProperties();\n    }\n\n    return NgxFlowUiButtonProperties.instance;\n  }\n\n  BaseClass = 'm-1 font-medium enabled:focus:ring-2 enabled:focus:outline-none disabled:cursor-not-allowed';\n\n  FillColorClass: Record<properties.FillClass, Record<properties.Color, string>> = {\n    solid: {\n      blue: ' text-white bg-blue-700 enabled:hover:bg-blue-800 enabled:focus:ring-blue-300 enabled:dark:bg-blue-600 enabled:dark:hover:bg-blue-700 enabled:dark:focus:ring-blue-800',\n      red: ' text-white bg-red-700 enabled:hover:bg-red-800 enabled:focus:ring-red-300 enabled:dark:bg-red-600 enabled:dark:hover:bg-red-700 enabled:dark:focus:ring-red-800',\n      green:\n        ' text-white bg-green-700 enabled:hover:bg-green-800 enabled:focus:ring-green-300 enabled:dark:bg-green-600 enabled:dark:hover:bg-green-700 enabled:dark:focus:ring-green-800',\n      yellow:\n        ' text-white bg-yellow-400 enabled:hover:bg-yellow-500 enabled:focus:ring-yellow-300 enabled:dark:bg-yellow-900 enabled:dark:focus:ring-yellow-900',\n    },\n    outline: {\n      blue: ' text-blue-700 enabled:hover:text-white enabled:hover:bg-blue-800 enabled:focus:ring-blue-300 enabled:dark:focus:ring-blue-800',\n      red: ' text-red-700 enabled:hover:text-white enabled:hover:bg-red-800 enabled:focus:ring-red-300 enabled:dark:focus:ring-red-800',\n      green:\n        ' text-green-700 enabled:hover:text-white enabled:hover:bg-green-800 enabled:focus:ring-green-300 enabled:dark:focus:ring-green-800',\n      yellow:\n        ' text-yellow-400 enabled:hover:text-white enabled:hover:bg-yellow-500 enabled:focus:ring-yellow-300 enabled:dark:focus:ring-yellow-900',\n    },\n  };\n\n  SizeClass: Record<properties.Size, string> = {\n    xs: ' text-xs',\n    sm: ' text-sm',\n    md: ' text-base',\n    lg: ' text-lg',\n    xl: ' text-xl',\n  };\n\n  BorderFillColorClass: Record<properties.FillClass, Record<properties.Color, string>> = {\n    solid: {\n      blue: '',\n      red: '',\n      green: '',\n      yellow: '',\n    },\n    outline: {\n      blue: ' border border-blue-700 disabled:border-blue-400',\n      red: ' border border-red-700 disabled:border-red-400',\n      green: ' border border-green-700 disabled:border-green-400',\n      yellow: ' border border-yellow-400 disabled:border-yellow-300',\n    },\n  };\n\n  DisabledFillColorClass: Record<properties.FillClass, Record<properties.Color, string>> = {\n    solid: {\n      blue: ' disabled:bg-blue-400 disabled:dark:bg-blue-500',\n      red: ' disabled:bg-red-400 disabled:dark:bg-red-500',\n      green: ' disabled:bg-green-400 disabled:dark:bg-green-500',\n      yellow: ' disabled:bg-yellow-300 disabled:dark:bg-yellow-600',\n    },\n    outline: {\n      blue: ' disabled:text-blue-400 disabled:dark:text-blue-500',\n      red: ' disabled:text-red-400 disabled:dark:text-red-500',\n      green: ' disabled:text-green-400 disabled:dark:text-green-500',\n      yellow: ' disabled:text-yellow-300 disabled:dark:text-yellow-600',\n    },\n  };\n\n  ModeClass: Record<buttonMode, string> = {\n    label: ' px-3 py-2 rounded-lg',\n    svg: ' p-2 inline-flex items-center text-center rounded-full',\n    'label+svg': ' px-3 py-2 inline-flex items-center text-center rounded-lg',\n  };\n}\n", "/** @format */\n\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport * as properties from '@ngx-flow-ui/lib/components/ngx-flow-ui.properties';\nimport * as buttonProperties from './ngx-flow-ui-button.properties';\n\n@Component({\n  selector: 'ngx-flow-ui-button',\n  standalone: true,\n  imports: [],\n  template: ` <button type=\"button\" [disabled]=\"disabled\" [class]=\"buttonClass\">\n    <ng-content></ng-content>\n  </button>`,\n})\nexport class NgxFlowUiButtonComponent implements OnInit {\n  @Input() color: properties.Color = 'blue';\n  @Input() fill: properties.FillClass = 'solid';\n  @Input() size: properties.Size = 'sm';\n\n  @Input() mode: buttonProperties.buttonMode = 'label';\n\n  @Input() disabled: boolean = false;\n\n  buttonClass: string = '';\n\n  ngOnInit(): void {\n    this.buttonClass += buttonProperties.NgxFlowUiButtonProperties.getInstance().BaseClass;\n    this.buttonClass += buttonProperties.NgxFlowUiButtonProperties.getInstance().SizeClass[this.size];\n    this.buttonClass += buttonProperties.NgxFlowUiButtonProperties.getInstance().FillColorClass[this.fill][this.color];\n    this.buttonClass +=\n      buttonProperties.NgxFlowUiButtonProperties.getInstance().BorderFillColorClass[this.fill][this.color];\n    this.buttonClass += buttonProperties.NgxFlowUiButtonProperties.getInstance().ModeClass[this.mode];\n    this.buttonClass +=\n      buttonProperties.NgxFlowUiButtonProperties.getInstance().DisabledFillColorClass[this.fill][this.color];\n  }\n}\n", "/** @format */\n\nimport { Component } from '@angular/core';\nimport { NgxFlowUiBadgeComponent as FlowUiBadge } from '@ngx-flow-ui/lib/components/ngx-flow-ui-badge/ngx-flow-ui-badge.component';\nimport { NgxFlowUiButtonComponent as FlowUiButton } from '@ngx-flow-ui/lib/components/ngx-flow-ui-button/ngx-flow-ui-button.component';\n\n@Component({\n  selector: 'app-ngx-flow-ui-button',\n  standalone: true,\n  imports: [FlowUiButton, FlowUiBadge],\n  templateUrl: './ngx-flow-ui-button.component.html',\n  styleUrl: './ngx-flow-ui-button.component.scss',\n})\nexport class NgxFlowUiButtonComponent {}\n", "<!-- @format -->\n\n<ngx-flow-ui-button color=\"blue\" fill=\"solid\" size=\"xs\">Blue</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"red\" fill=\"solid\" size=\"xs\">Red</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"green\" fill=\"solid\" size=\"xs\">Green</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"yellow\" fill=\"solid\" size=\"xs\">Yellow</ngx-flow-ui-button>\n<br />\n<ngx-flow-ui-button color=\"blue\" fill=\"solid\" size=\"xs\" [disabled]=\"true\">Blue</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"red\" fill=\"solid\" size=\"xs\" [disabled]=\"true\">Red</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"green\" fill=\"solid\" size=\"xs\" [disabled]=\"true\">Green</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"yellow\" fill=\"solid\" size=\"xs\" [disabled]=\"true\">Yellow</ngx-flow-ui-button>\n<br />\n<ngx-flow-ui-button color=\"blue\" fill=\"solid\" size=\"lg\">Blue</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"red\" fill=\"solid\" size=\"lg\">Red</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"green\" fill=\"solid\" size=\"lg\">Green</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"yellow\" fill=\"solid\" size=\"lg\">Yellow</ngx-flow-ui-button>\n<br />\n<ngx-flow-ui-button color=\"blue\" fill=\"outline\" size=\"xs\">Blue</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"red\" fill=\"outline\" size=\"xs\">Red</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"green\" fill=\"outline\" size=\"xs\">Green</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"yellow\" fill=\"outline\" size=\"xs\">Yellow</ngx-flow-ui-button>\n<br />\n<ngx-flow-ui-button color=\"blue\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"red\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"green\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"yellow\" fill=\"solid\" size=\"xs\" mode=\"svg\">\n  <svg class=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n    <path\n      d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n  </svg>\n</ngx-flow-ui-button>\n<br />\n<ngx-flow-ui-button color=\"blue\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  Blue\n  <ngx-flow-ui-badge [buttonBadge]=\"true\">\n    <svg class=\"ms-1.5 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path\n        d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n    </svg>\n  </ngx-flow-ui-badge>\n</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"red\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  Red\n  <ngx-flow-ui-badge [buttonBadge]=\"true\">\n    <svg class=\"ms-1.5 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path\n        d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n    </svg>\n  </ngx-flow-ui-badge>\n</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"green\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  Green\n  <ngx-flow-ui-badge [buttonBadge]=\"true\">\n    <svg class=\"ms-1.5 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path\n        d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n    </svg>\n  </ngx-flow-ui-badge>\n</ngx-flow-ui-button>\n<ngx-flow-ui-button color=\"yellow\" fill=\"solid\" size=\"xs\" mode=\"label+svg\">\n  Yellow\n  <ngx-flow-ui-badge [buttonBadge]=\"true\">\n    <svg class=\"ms-1.5 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path\n        d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\n    </svg>\n  </ngx-flow-ui-badge>\n</ngx-flow-ui-button>\n", "/** @format */\n\nimport { Route } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { NgxFlowUiBadgeComponent } from './ngx-flow-ui-badge/ngx-flow-ui-badge.component';\nimport { NgxFlowUiButtonComponent } from './ngx-flow-ui-button/ngx-flow-ui-button.component';\n\nexport default [\n  { path: '', component: HomeComponent },\n  { path: 'NgxFlowUiBadge', component: NgxFlowUiBadgeComponent },\n  { path: 'NgxFlowUiButton', component: NgxFlowUiButtonComponent },\n] as Route[];\n"],
  "mappings": "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",
  "names": ["_NgxFlowUiBadgeComponent", "NgxFlowUiBadgeComponent", "_c0", "_NgxFlowUiButtonComponent", "NgxFlowUiButtonComponent", "NgxFlowUiBadgeComponent", "NgxFlowUiButtonComponent"]
}
